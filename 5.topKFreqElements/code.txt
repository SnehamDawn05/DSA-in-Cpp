class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        unordered_map<int,int> mp;
        for(int i=0;i<nums.size();i++){
            if(mp.find(nums[i])==mp.end()) mp[nums[i]]=0;
            mp[nums[i]]=mp[nums[i]]+1;
        }
        int n= nums.size();
        vector<vector<int>> bucket(n+1);
        for(auto &p: mp){
            bucket[p.second].push_back(p.first);
        }
        vector<int> ans;
        for(int i=n;i>=0 && ans.size()<k;i--){
            for(int x: bucket[i]){
                ans.push_back(x);
                if(ans.size()==k) break;
            }
            
        }
        return ans;
    }
};